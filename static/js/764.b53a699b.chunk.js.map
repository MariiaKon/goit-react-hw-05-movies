{"version":3,"file":"static/js/764.b53a699b.chunk.js","mappings":"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","sources":["components/API/API.js","components/CommonComponents/Button/Button.jsx","components/CommonComponents/Button/Button.styled.jsx","components/views/Details/MovieDetailsPage.jsx","hooks/useMovieDetails.js","components/views/Details/styled.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '219747bddc830c6768a55001e81d80ed';\nconst options = {\n  params: {\n    api_key: API_KEY,\n    query: '',\n  },\n};\n\nexport async function getTrending() {\n  const response = await axios.get('trending/movie/day', options);\n  return response.data;\n}\n\nexport const getMovieByQuery = async query => {\n  options.params.query = query;\n\n  const response = await axios.get('search/movie', options);\n  return response.data;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(`movie/${id}`, options);\n  return response.data;\n};\n\nexport const getMovieCast = async id => {\n  const response = await axios.get(`movie/${id}/credits`, options);\n  return response.data;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(`movie/${id}/reviews`, options);\n  return response.data;\n};\n","import { Button } from './Button.styled';\nimport PropTypes from 'prop-types';\n\nexport const ButtonComponent = ({\n  type = 'button',\n  className,\n  onClick,\n  children,\n}) => {\n  return (\n    <Button type={type} className={className} onClick={onClick}>\n      {children}\n    </Button>\n  );\n};\n\nButtonComponent.propTypes = {\n  type: PropTypes.string,\n  className: PropTypes.string,\n  onClick: PropTypes.func,\n  children: PropTypes.any,\n};\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n  min-width: 40px;\n  width: fit-content;\n  min-height: 40px;\n  height: fit-content;\n  border: none;\n  background: black;\n  color: white;\n  padding: 10px;\n\n  &:hover {\n    background: #f51911;\n  }\n\n  &.search {\n    padding: 0;\n    font-size: 1.2em;\n  }\n\n  &.goHome {\n    padding: 10px 20px;\n    font-size: 0.8em;\n  }\n\n  &.goBack {\n    min-height: 24px;\n    margin-bottom: 20px;\n    font-size: 0.7em;\n    padding: 0 10px;\n  }\n`;\n","import {\n  Outlet,\n  Link,\n  useParams,\n  useLocation,\n  useNavigate,\n} from 'react-router-dom';\nimport { Details, Poster, Desription, MoreInfo } from './styled';\nimport { useMovieDetails } from 'hooks/useMovieDetails';\nimport placeholder from 'components/placeholders/no-poster.png';\nimport { ButtonComponent } from 'components/CommonComponents/Button/Button';\nimport PropTypes from 'prop-types';\n\nexport default function MovieDetailsPage() {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const { movieId } = useParams();\n  const movie = useMovieDetails(movieId);\n\n  const handleClick = () => {\n    navigate(location?.state?.from ?? '/');\n  };\n\n  return (\n    <>\n      <ButtonComponent className=\"goBack\" onClick={handleClick}>\n        Go back\n      </ButtonComponent>\n      {movie && (\n        <>\n          <Details>\n            <Poster>\n              <img\n                src={\n                  movie.poster_path\n                    ? `https://image.tmdb.org/t/p/w200${movie.poster_path}`\n                    : placeholder\n                }\n                alt={movie.title}\n              />\n            </Poster>\n            <Desription>\n              <h2>\n                {movie.title}{' '}\n                {movie.release_date ? (\n                  <>({movie.release_date.split('-', 1)})</>\n                ) : (\n                  <></>\n                )}\n              </h2>\n              <p>\n                Rating: {movie.vote_average} (Votes: {movie.vote_count})\n              </p>\n              <h3>Overwiew</h3>\n              <p>{movie.overview}</p>\n              <h4>Genres</h4>\n              <p>{movie.genres.map(genre => genre.name).join(', ')}</p>\n            </Desription>\n            <MoreInfo>\n              <h3>Additional information</h3>\n              <ul>\n                <li>\n                  <Link\n                    to={`cast`}\n                    state={{ from: location?.state?.from ?? '/' }}\n                  >\n                    Cast\n                  </Link>\n                </li>\n                <li>\n                  <Link\n                    to={`reviews`}\n                    state={{ from: location?.state?.from ?? '/' }}\n                  >\n                    Reviews\n                  </Link>\n                </li>\n              </ul>\n            </MoreInfo>\n          </Details>\n        </>\n      )}\n\n      <Outlet />\n    </>\n  );\n}\n\nMovieDetailsPage.propTypes = {\n  movie: PropTypes.shape({\n    poster_path: PropTypes.string,\n    title: PropTypes.string.isRequired,\n    release_date: PropTypes.string,\n    vote_average: PropTypes.number.isRequired,\n    vote_count: PropTypes.number.isRequired,\n    overview: PropTypes.string,\n\n    genres: PropTypes.arrayOf(\n      PropTypes.shape({\n        name: PropTypes.string.isRequired,\n      })\n    ),\n  }),\n};\n","import { useState, useEffect } from 'react';\nimport * as API from 'components/API/API';\n\nexport function useMovieDetails(id) {\n  const [movie, setMovie] = useState(null);\n\n  useEffect(() => {\n    API.getMovieDetails(id).then(setMovie);\n  }, [id]);\n\n  return movie;\n}\n","import styled from 'styled-components';\n\nexport const Details = styled.div`\n  display: block;\n\n  @media screen and (min-width: 500px) {\n    display: grid;\n    grid-template-columns: 200px auto-fill;\n    grid-template-rows: 300px auto-fill;\n    grid-column-gap: 20px;\n    grid-row-gap: 0;\n  }\n`;\n\nexport const Poster = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: auto;\n  height: 300px;\n  width: 200px;\n  background-color: #c3c3c3a4;\n  margin-bottom: 20px;\n\n  @media screen and (min-width: 500px) {\n    grid-area: 1 / 1 / 2 / 2;\n    margin: 0;\n    margin-bottom: 30px;\n  }\n\n  img {\n    max-height: 300px;\n  }\n`;\n\nexport const Desription = styled.div`\n  @media screen and (min-width: 500px) {\n    grid-area: 1 / 2 / 2 / 3;\n  }\n`;\n\nexport const MoreInfo = styled.div`\n  border-top: 1px solid #8a8a8a;\n  border-bottom: 1px solid #8a8a8a;\n  padding-top: 20px;\n  padding-bottom: 20px;\n\n  @media screen and (min-width: 500px) {\n    grid-area: 2 / 1 / 3 / 3;\n  }\n`;\n\nexport const CastList = styled.ul`\n  list-style: none;\n  padding: 0;\n\n  @media screen and (min-width: 500px) {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));\n    grid-gap: 20px;\n  }\n`;\n\nexport const CastItem = styled.li`\n  text-align: center;\n  padding: 10px 0;\n`;\n\nexport const ActorPhoto = styled.div`\n  background-color: #c3c3c3a4;\n  width: 150px;\n  height: 225px;\n  margin: 0 auto 10px auto;\n\n  img {\n    width: 150px;\n  }\n\n  @media screen and (min-width: 500px) {\n    width: 120px;\n    height: 180px;\n\n    img {\n      width: 120px;\n    }\n  }\n`;\n"],"names":["axios","options","params","api_key","query","getTrending","response","data","getMovieByQuery","getMovieDetails","id","getMovieCast","getMovieReviews","ButtonComponent","type","className","onClick","children","Button","styled","MovieDetailsPage","location","useLocation","navigate","useNavigate","movie","useState","setMovie","useEffect","API","then","useMovieDetails","useParams","movieId","state","from","src","poster_path","placeholder","alt","title","release_date","split","vote_average","vote_count","overview","genres","map","genre","name","join","to","Details","Poster","Desription","MoreInfo","CastList","CastItem","ActorPhoto"],"sourceRoot":""}