{"version":3,"file":"static/js/433.e0070fae.chunk.js","mappings":"4TAEAA,IAAAA,SAAAA,QAAyB,gCACzB,IACMC,EAAU,CACdC,OAAQ,CACNC,QAHY,mCAIZC,MAAO,KAIJ,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBL,IAAAA,IAAU,qBAAsBC,GADlD,cACCK,EADD,yBAEEA,EAASC,MAFX,kEAKA,IAAMC,EAAe,mCAAG,WAAMJ,GAAN,8EAC7BH,EAAQC,OAAOE,MAAQA,EADM,SAGNJ,IAAAA,IAAU,eAAgBC,GAHpB,cAGvBK,EAHuB,yBAItBA,EAASC,MAJa,2CAAH,sDAOfE,EAAe,mCAAG,WAAMC,GAAN,uFACNV,IAAAA,IAAA,gBAAmBU,GAAMT,GADnB,cACvBK,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,sDAKfI,EAAY,mCAAG,WAAMD,GAAN,uFACHV,IAAAA,IAAA,gBAAmBU,EAAnB,YAAiCT,GAD9B,cACpBK,EADoB,yBAEnBA,EAASC,MAFU,2CAAH,sDAKZK,EAAe,mCAAG,WAAMF,GAAN,uFACNV,IAAAA,IAAA,gBAAmBU,EAAnB,YAAiCT,GAD3B,cACvBK,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,uD,qFC9BrB,SAASM,EAAT,GAAgC,IAAXC,EAAU,EAAVA,OACpBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,wBACGF,EAAOG,KAAI,SAAAC,GACV,OACE,yBACE,UAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAMR,IAAMU,MAAO,CAAEC,KAAMN,GAAhD,UACGG,EAAMI,MAAO,IACbJ,EAAMK,cACL,oCAAIL,EAAMK,aAAaC,MAAM,IAAK,GAAlC,QAEA,4BANGN,EAAMR,W,0FCRZe,E,QAAYC,GAAAA,GAAH,sB,oDCEP,SAASC,IACtB,IAAMb,ECFD,WACL,OAA4Bc,EAAAA,EAAAA,UAAS,IAArC,eAAOd,EAAP,KAAee,EAAf,KAQA,OANAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,KAAkBC,MAAK,SAAA1B,GACrBuB,GAAU,SAAAI,GAAS,cAAQ3B,EAAS4B,iBAErC,IAEIpB,EDPQqB,GAEf,OACE,iCACE,SAACV,EAAD,6BAECX,IAAU,SAACD,EAAA,EAAD,CAAWC,OAAQA,S,+EEPrB,SAASsB,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAO,EAAAG,EAAA,GAAiBH,GDGzC,CAAkBA,IELZ,SAA0BI,GACvC,GAAsB,qBAAXC,QAAmD,MAAzBD,EAAKC,OAAOC,WAA2C,MAAtBF,EAAK,cAAuB,OAAOH,MAAMjB,KAAKoB,GFInF,CAAgBJ,KAAQ,EAAAO,EAAA,GAA2BP,IGLvE,WACb,MAAM,IAAIQ,UAAU,wIHIwE","sources":["components/API/API.js","components/CommonComponents/List/MovieList.jsx","components/views/Home/styled.jsx","components/views/Home/HomePage.jsx","hooks/useTrendings.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '219747bddc830c6768a55001e81d80ed';\nconst options = {\n  params: {\n    api_key: API_KEY,\n    query: '',\n  },\n};\n\nexport async function getTrending() {\n  const response = await axios.get('trending/movie/day', options);\n  return response.data;\n}\n\nexport const getMovieByQuery = async query => {\n  options.params.query = query;\n\n  const response = await axios.get('search/movie', options);\n  return response.data;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(`movie/${id}`, options);\n  return response.data;\n};\n\nexport const getMovieCast = async id => {\n  const response = await axios.get(`movie/${id}/credits`, options);\n  return response.data;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(`movie/${id}/reviews`, options);\n  return response.data;\n};\n","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport function MovieList({ movies }) {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {movies.map(movie => {\n        return (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              {movie.title}{' '}\n              {movie.release_date ? (\n                <>({movie.release_date.split('-', 1)})</>\n              ) : (\n                <></>\n              )}\n            </Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      release_date: PropTypes.string,\n    })\n  ),\n};\n","import styled from 'styled-components';\n\nexport const HomeTitle = styled.h1``;\n","import { MovieList } from 'components/CommonComponents/List/MovieList';\nimport { HomeTitle } from './styled';\nimport { useTrendings } from 'hooks/useTrendings';\n\nexport default function HomePage() {\n  const movies = useTrendings();\n\n  return (\n    <>\n      <HomeTitle>Trending today</HomeTitle>\n\n      {movies && <MovieList movies={movies} />}\n    </>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport * as API from 'components/API/API';\n\nexport function useTrendings() {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    API.getTrending().then(response => {\n      setMovies(prevState => [...response.results]);\n    });\n  }, []);\n\n  return movies;\n}\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["axios","options","params","api_key","query","getTrending","response","data","getMovieByQuery","getMovieDetails","id","getMovieCast","getMovieReviews","MovieList","movies","location","useLocation","map","movie","to","state","from","title","release_date","split","HomeTitle","styled","HomePage","useState","setMovies","useEffect","API","then","prevState","results","useTrendings","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","unsupportedIterableToArray","TypeError"],"sourceRoot":""}