{"version":3,"file":"static/js/764.8d7cef8f.chunk.js","mappings":"4TAEAA,IAAAA,SAAAA,QAAyB,gCACzB,IACMC,EAAU,CACdC,OAAQ,CACNC,QAHY,mCAIZC,MAAO,KAIJ,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBL,IAAAA,IAAU,qBAAsBC,GADlD,cACCK,EADD,yBAEEA,EAASC,MAFX,kEAKA,IAAMC,EAAe,mCAAG,WAAMJ,GAAN,8EAC7BH,EAAQC,OAAOE,MAAQA,EADM,SAGNJ,IAAAA,IAAU,eAAgBC,GAHpB,cAGvBK,EAHuB,yBAItBA,EAASC,MAJa,2CAAH,sDAOfE,EAAe,mCAAG,WAAMC,GAAN,uFACNV,IAAAA,IAAA,gBAAmBU,GAAMT,GADnB,cACvBK,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,sDAKfI,EAAY,mCAAG,WAAMD,GAAN,uFACHV,IAAAA,IAAA,gBAAmBU,EAAnB,YAAiCT,GAD9B,cACpBK,EADoB,yBAEnBA,EAASC,MAFU,2CAAH,sDAKZK,EAAe,mCAAG,WAAMF,GAAN,uFACNV,IAAAA,IAAA,gBAAmBU,EAAnB,YAAiCT,GAD3B,cACvBK,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,uD,wJC5Bb,SAASM,IACtB,IAAMC,ECHD,SAAyBJ,GAC9B,OAA0BK,EAAAA,EAAAA,UAAS,MAAnC,eAAOD,EAAP,KAAcE,EAAd,KAMA,OAJAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAAoBR,GAAIS,KAAKH,KAC5B,CAACN,IAEGI,EDJOM,GAEd,OACE,gCACGN,IACC,+BACE,UAAC,KAAD,YACE,SAAC,KAAD,WACE,gBACEO,IACEP,EAAMQ,YAAN,yCACsCR,EAAMQ,aACxCC,EAENC,IAAKV,EAAMW,WAGf,UAAC,KAAD,YACE,0BACGX,EAAMW,MADT,KACkBX,EAAMY,aAAaC,MAAM,IAAK,GADhD,QAGA,oCACWb,EAAMc,aADjB,YACwCd,EAAMe,WAD9C,QAGA,sCACA,uBAAIf,EAAMgB,YACV,oCACA,uBAAIhB,EAAMiB,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,QAAMC,KAAK,YAEjD,UAAC,KAAD,YACE,oDACA,2BACE,yBACE,SAAC,KAAD,CAAMC,GAAE,OAAR,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAE,UAAR,mCAQZ,SAAC,KAAD,S,qQEhDOC,EAAUC,EAAAA,GAAAA,IAAH,yPAYPC,EAASD,EAAAA,GAAAA,IAAH,oVAoBNE,EAAaF,EAAAA,GAAAA,IAAH,sGAMVG,EAAWH,EAAAA,GAAAA,IAAH,8NAWRI,EAAWJ,EAAAA,GAAAA,GAAH,wNAWRK,EAAWL,EAAAA,GAAAA,GAAH,mEAKRM,EAAaN,EAAAA,GAAAA,IAAH,4RAoBVO,EAAeP,EAAAA,GAAAA,IAAH,sF","sources":["components/API/API.js","components/views/Details/MovieDetailsPage.jsx","hooks/useMovieDetails.js","components/views/Details/styled.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '219747bddc830c6768a55001e81d80ed';\nconst options = {\n  params: {\n    api_key: API_KEY,\n    query: '',\n  },\n};\n\nexport async function getTrending() {\n  const response = await axios.get('trending/movie/day', options);\n  return response.data;\n}\n\nexport const getMovieByQuery = async query => {\n  options.params.query = query;\n\n  const response = await axios.get('search/movie', options);\n  return response.data;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(`movie/${id}`, options);\n  return response.data;\n};\n\nexport const getMovieCast = async id => {\n  const response = await axios.get(`movie/${id}/credits`, options);\n  return response.data;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(`movie/${id}/reviews`, options);\n  return response.data;\n};\n","import { Outlet, Link } from 'react-router-dom';\nimport { Details, Poster, Desription, MoreInfo } from './styled';\nimport { useMovieDetails } from 'hooks/useMovieDetails';\nimport placeholder from 'components/placeholders/no-poster.png';\n\nexport default function MovieDetailsPage() {\n  const movie = useMovieDetails();\n\n  return (\n    <>\n      {movie && (\n        <>\n          <Details>\n            <Poster>\n              <img\n                src={\n                  movie.poster_path\n                    ? `https://image.tmdb.org/t/p/w200${movie.poster_path}`\n                    : placeholder\n                }\n                alt={movie.title}\n              />\n            </Poster>\n            <Desription>\n              <h2>\n                {movie.title} ({movie.release_date.split('-', 1)})\n              </h2>\n              <p>\n                Rating: {movie.vote_average} (Votes: {movie.vote_count})\n              </p>\n              <h3>Overwiew</h3>\n              <p>{movie.overview}</p>\n              <h4>Genres</h4>\n              <p>{movie.genres.map(genre => genre.name).join(', ')}</p>\n            </Desription>\n            <MoreInfo>\n              <h3>Additional information</h3>\n              <ul>\n                <li>\n                  <Link to={`cast`}>Cast</Link>\n                </li>\n                <li>\n                  <Link to={`reviews`}>Reviews</Link>\n                </li>\n              </ul>\n            </MoreInfo>\n          </Details>\n        </>\n      )}\n\n      <Outlet />\n    </>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport * as API from 'components/API/API';\n\nexport function useMovieDetails(id) {\n  const [movie, setMovie] = useState(null);\n\n  useEffect(() => {\n    API.getMovieDetails(id).then(setMovie);\n  }, [id]);\n\n  return movie;\n}\n","import styled from 'styled-components';\n\nexport const Details = styled.div`\n  display: block;\n\n  @media screen and (min-width: 500px) {\n    display: grid;\n    grid-template-columns: 200px auto-fill;\n    grid-template-rows: 300px auto-fill;\n    grid-column-gap: 20px;\n    grid-row-gap: 0;\n  }\n`;\n\nexport const Poster = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: auto;\n  height: 300px;\n  width: 200px;\n  background-color: #c3c3c3a4;\n  margin-bottom: 20px;\n\n  @media screen and (min-width: 500px) {\n    grid-area: 1 / 1 / 2 / 2;\n    margin: 0;\n    margin-bottom: 30px;\n  }\n\n  img {\n    max-height: 300px;\n  }\n`;\n\nexport const Desription = styled.div`\n  @media screen and (min-width: 500px) {\n    grid-area: 1 / 2 / 2 / 3;\n  }\n`;\n\nexport const MoreInfo = styled.div`\n  border-top: 1px solid #8a8a8a;\n  border-bottom: 1px solid #8a8a8a;\n  padding-top: 20px;\n  padding-bottom: 20px;\n\n  @media screen and (min-width: 500px) {\n    grid-area: 2 / 1 / 3 / 3;\n  }\n`;\n\nexport const CastList = styled.ul`\n  list-style: none;\n  padding: 0;\n\n  @media screen and (min-width: 500px) {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));\n    grid-gap: 20px;\n  }\n`;\n\nexport const CastItem = styled.li`\n  text-align: center;\n  padding: 10px 0;\n`;\n\nexport const ActorPhoto = styled.div`\n  background-color: #c3c3c3a4;\n  width: 150px;\n  height: 225px;\n  margin: 0 auto 10px auto;\n\n  img {\n    width: 150px;\n  }\n\n  @media screen and (min-width: 500px) {\n    width: 120px;\n    height: 180px;\n\n    img {\n      width: 120px;\n    }\n  }\n`;\n\nexport const NoResultsMsg = styled.div`\n  font-size: 18px;\n  font-weight: 400;\n  padding: 20px 0;\n`;\n"],"names":["axios","options","params","api_key","query","getTrending","response","data","getMovieByQuery","getMovieDetails","id","getMovieCast","getMovieReviews","MovieDetailsPage","movie","useState","setMovie","useEffect","API","then","useMovieDetails","src","poster_path","placeholder","alt","title","release_date","split","vote_average","vote_count","overview","genres","map","genre","name","join","to","Details","styled","Poster","Desription","MoreInfo","CastList","CastItem","ActorPhoto","NoResultsMsg"],"sourceRoot":""}