{"version":3,"file":"static/js/810.47181b26.chunk.js","mappings":"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","sources":["components/API/API.js","components/CommonComponents/Button/Button.styled.jsx","components/CommonComponents/List/MovieList.jsx","components/CommonComponents/NoMoviesMsg/NoInfoMsg.styled.jsx","components/CommonComponents/NoMoviesMsg/NoInfoMsg.jsx","components/views/Movies/styled.jsx","components/views/Movies/MoviesPage.jsx","hooks/useMovieByQuery.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '219747bddc830c6768a55001e81d80ed';\nconst options = {\n  params: {\n    api_key: API_KEY,\n    query: '',\n  },\n};\n\nexport async function getTrending() {\n  const response = await axios.get('trending/movie/day', options);\n  return response.data;\n}\n\nexport const getMovieByQuery = async query => {\n  options.params.query = query;\n\n  const response = await axios.get('search/movie', options);\n  return response.data;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(`movie/${id}`, options);\n  return response.data;\n};\n\nexport const getMovieCast = async id => {\n  const response = await axios.get(`movie/${id}/credits`, options);\n  return response.data;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(`movie/${id}/reviews`, options);\n  return response.data;\n};\n","import styled from 'styled-components';\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n  min-width: 40px;\n  width: fit-content;\n  min-height: 40px;\n  height: fit-content;\n  border: none;\n  background: black;\n  color: white;\n  padding: 10px;\n\n  &:hover {\n    background: #f51911;\n  }\n\n  &.search {\n    padding: 0;\n    font-size: 1.2em;\n  }\n\n  &.goHome {\n    padding: 10px 20px;\n    font-size: 0.8em;\n  }\n\n  &.goBack {\n    min-height: 24px;\n    margin-bottom: 20px;\n    font-size: 0.7em;\n    padding: 0 10px;\n  }\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nexport function MovieList({ movies }) {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {movies.map(movie => {\n        return (\n          <li key={movie.id}>\n            <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n              {movie.title}{' '}\n              {movie.release_date ? (\n                <>({movie.release_date.split('-', 1)})</>\n              ) : (\n                <></>\n              )}\n            </Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n}\n\nMovieList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n      release_date: PropTypes.string,\n    })\n  ),\n};\n","import styled from 'styled-components';\n\nexport const NoInfoMsg = styled.div`\n  padding: 20px 0;\n  font-size: 20px;\n  font-weight: 500;\n`;\n","import { NoInfoMsg } from './NoInfoMsg.styled';\nimport PropTypes from 'prop-types';\n\nexport function NoInfoMsgComponent({ text = 'No information', query = '' }) {\n  return (\n    <NoInfoMsg>\n      {text}\n      {query}\n    </NoInfoMsg>\n  );\n}\n\nNoInfoMsgComponent.propTypes = {\n  text: PropTypes.string,\n  query: PropTypes.string,\n};\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n`;\n\nexport const Input = styled.input`\n  font-size: 1.3em;\n  padding: 4px 8px;\n  border: 1px solid black;\n  width: calc(100vw - 100px);\n\n  @media screen and (min-width: 400px) {\n    width: 300px;\n  }\n\n  &::placeholder {\n    font-size: 0.8em;\n    color: #8a8a8a;\n  }\n\n  &:focus {\n    outline-offset: -2px;\n    outline: 2px solid #f51911;\n  }\n`;\n","import { BsSearch } from 'react-icons/bs';\nimport { useState, useEffect } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { MovieList } from 'components/CommonComponents/List/MovieList';\nimport { Button } from 'components/CommonComponents/Button/Button.styled';\nimport { NoInfoMsgComponent } from 'components/CommonComponents/NoMoviesMsg/NoInfoMsg';\nimport { Form, Input } from './styled';\nimport { useMovieByQuery } from 'hooks/useMovieByQuery';\n\nexport default function MoviesPage() {\n  const [query, setQuery] = useState('');\n  const movies = useMovieByQuery(query);\n  const navigate = useNavigate();\n  const location = useLocation();\n  const regex = new RegExp(`[a-z0-9]+$`, '');\n  const queryStr = regex.exec(location.search);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setQuery(e.target.elements.query.value.trim());\n    navigate(`?query=${e.target.elements.query.value.trim().toLowerCase()}`);\n    e.target.elements.query.value = '';\n  };\n\n  useEffect(() => {\n    if (location.search === '') {\n      setQuery('');\n      return;\n    }\n\n    if (queryStr === null) {\n      return;\n    }\n\n    setQuery(queryStr[0]);\n  }, [queryStr, location]);\n\n  return (\n    <>\n      <Form onSubmit={handleSubmit}>\n        <Input type=\"text\" name=\"query\" placeholder=\"Search movie\" />\n        <Button type=\"submit\" className=\"search\">\n          <BsSearch />\n        </Button>\n      </Form>\n\n      {movies?.length === 0 && (\n        <NoInfoMsgComponent\n          text={\"We don't have movies for \"}\n          query={`\"${query}\".`}\n        ></NoInfoMsgComponent>\n      )}\n\n      {movies && <MovieList movies={movies} />}\n    </>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport * as API from 'components/API/API';\n\nexport function useMovieByQuery(query) {\n  const [movies, setMovies] = useState(null);\n\n  useEffect(() => {\n    if (query === '') {\n      setMovies(prevState => null);\n      return;\n    }\n\n    API.getMovieByQuery(query).then(response => {\n      if (response.total_results === 0) {\n        setMovies(prevState => []);\n        return;\n      }\n\n      setMovies(prevState => [...response.results]);\n    });\n  }, [query]);\n\n  return movies;\n}\n"],"names":["axios","options","params","api_key","query","getTrending","response","data","getMovieByQuery","getMovieDetails","id","getMovieCast","getMovieReviews","Button","styled","MovieList","movies","location","useLocation","map","movie","to","state","from","title","release_date","split","NoInfoMsg","NoInfoMsgComponent","text","Form","Input","MoviesPage","useState","setQuery","setMovies","useEffect","API","then","total_results","prevState","results","useMovieByQuery","navigate","useNavigate","queryStr","RegExp","exec","search","onSubmit","e","preventDefault","target","elements","value","trim","toLowerCase","type","name","placeholder","className","length"],"sourceRoot":""}