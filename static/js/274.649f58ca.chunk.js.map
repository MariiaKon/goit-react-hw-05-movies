{"version":3,"file":"static/js/274.649f58ca.chunk.js","mappings":"gUAEAA,IAAAA,SAAAA,QAAyB,gCACzB,IACMC,EAAU,CACdC,OAAQ,CACNC,QAHY,mCAIZC,MAAO,KAIJ,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBL,IAAAA,IAAU,qBAAsBC,GADlD,cACCK,EADD,yBAEEA,EAASC,MAFX,kEAKA,IAAMC,EAAe,mCAAG,WAAMJ,GAAN,8EAC7BH,EAAQC,OAAOE,MAAQA,EADM,SAGNJ,IAAAA,IAAU,eAAgBC,GAHpB,cAGvBK,EAHuB,yBAItBA,EAASC,MAJa,2CAAH,sDAOfE,EAAe,mCAAG,WAAMC,GAAN,uFACNV,IAAAA,IAAA,gBAAmBU,GAAMT,GADnB,cACvBK,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,sDAKfI,EAAY,mCAAG,WAAMD,GAAN,uFACHV,IAAAA,IAAA,gBAAmBU,EAAnB,YAAiCT,GAD9B,cACpBK,EADoB,yBAEnBA,EAASC,MAFU,2CAAH,sDAKZK,EAAe,mCAAG,WAAMF,GAAN,uFACNV,IAAAA,IAAA,gBAAmBU,EAAnB,YAAiCT,GAD3B,cACvBK,EADuB,yBAEtBA,EAASC,MAFa,2CAAH,uD,gFC/BfM,E,QAASC,GAAAA,IAAH,yF,SCAJ,SAASC,IACtB,OAAO,SAACF,EAAD,2B,oECDIG,E,QAAYF,GAAAA,IAAH,qF,SCCf,SAASG,EAAT,GAAsE,IAAD,IAAvCC,KAAAA,OAAuC,MAAhC,iBAAgC,MAAdd,MAAAA,OAAc,MAAN,GAAM,EAC1E,OACE,UAACY,EAAD,WACGE,EACAd,O,2KCAQ,SAASe,IACtB,IAAMC,ECHD,WACL,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAAwBE,EAAAA,EAAAA,UAAS,MAAjC,eAAOH,EAAP,KAAaI,EAAb,KAQA,OANAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAAiBL,GAASM,MAAK,SAAArB,GAC7BkB,GAAQ,SAAAI,GAAS,cAAQtB,EAASc,cAEnC,CAACC,IAEGD,EDRMS,GAEb,OACE,gCACY,OAATT,IAAiB,SAAC,UAAD,IAEA,KAAb,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAMU,UACL,SAACd,EAAA,EAAD,CAAoBE,KAAM,8BAG3BE,IACC,SAAC,KAAD,UACGA,EAAKW,KAAI,SAAAC,GACR,OACE,UAAC,KAAD,YACE,SAAC,KAAD,WACE,gBACEC,IACED,EAAME,aAAN,yCACsCF,EAAME,cACxCC,EAENC,IAAKJ,EAAMK,UAIf,wBAAKL,EAAMK,QACX,uCAAeL,EAAMM,eAbRN,EAAMO,mB,2OEpBtBC,EAAU1B,EAAAA,GAAAA,IAAH,yPAYP2B,EAAS3B,EAAAA,GAAAA,IAAH,oVAoBN4B,EAAa5B,EAAAA,GAAAA,IAAH,sGAMV6B,EAAW7B,EAAAA,GAAAA,IAAH,8NAWR8B,EAAW9B,EAAAA,GAAAA,GAAH,wNAWR+B,EAAW/B,EAAAA,GAAAA,GAAH,mEAKRgC,EAAahC,EAAAA,GAAAA,IAAH,uU,qKC/DR,SAASiC,EAAmBC,GACzC,OCJa,SAA4BA,GACzC,GAAIC,MAAMC,QAAQF,GAAM,OAAO,EAAAG,EAAA,GAAiBH,GDGzC,CAAkBA,IELZ,SAA0BI,GACvC,GAAsB,qBAAXC,QAAmD,MAAzBD,EAAKC,OAAOC,WAA2C,MAAtBF,EAAK,cAAuB,OAAOH,MAAMM,KAAKH,GFInF,CAAgBJ,KAAQ,EAAAQ,EAAA,GAA2BR,IGLvE,WACb,MAAM,IAAIS,UAAU,wIHIwE","sources":["components/API/API.js","components/CommonComponents/Loader/Loader.styled.jsx","components/CommonComponents/Loader/Loader.jsx","components/CommonComponents/NoMoviesMsg/NoInfoMsg.styled.jsx","components/CommonComponents/NoMoviesMsg/NoInfoMsg.jsx","components/views/Details/Cast.jsx","hooks/useCast.js","components/views/Details/styled.jsx","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '219747bddc830c6768a55001e81d80ed';\nconst options = {\n  params: {\n    api_key: API_KEY,\n    query: '',\n  },\n};\n\nexport async function getTrending() {\n  const response = await axios.get('trending/movie/day', options);\n  return response.data;\n}\n\nexport const getMovieByQuery = async query => {\n  options.params.query = query;\n\n  const response = await axios.get('search/movie', options);\n  return response.data;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(`movie/${id}`, options);\n  return response.data;\n};\n\nexport const getMovieCast = async id => {\n  const response = await axios.get(`movie/${id}/credits`, options);\n  return response.data;\n};\n\nexport const getMovieReviews = async id => {\n  const response = await axios.get(`movie/${id}/reviews`, options);\n  return response.data;\n};\n","import styled from 'styled-components';\n\nexport const Loader = styled.div`\n  font-size: 20px;\n  letter-spacing: 0.05em;\n  padding: 20px;\n`;\n","import { Loader } from './Loader.styled';\n\nexport default function Loading() {\n  return <Loader>Loading...</Loader>;\n}\n","import styled from 'styled-components';\n\nexport const NoInfoMsg = styled.div`\n  padding: 20px 0;\n  font-size: 20px;\n  font-weight: 500;\n`;\n","import { NoInfoMsg } from './NoInfoMsg.styled';\nimport PropTypes from 'prop-types';\n\nexport function NoInfoMsgComponent({ text = 'No information', query = '' }) {\n  return (\n    <NoInfoMsg>\n      {text}\n      {query}\n    </NoInfoMsg>\n  );\n}\n\nNoInfoMsgComponent.propTypes = {\n  text: PropTypes.string,\n  query: PropTypes.string,\n};\n","import { CastList, ActorPhoto, CastItem } from './styled';\nimport { useCast } from 'hooks/useCast';\nimport Loading from 'components/CommonComponents/Loader/Loader';\nimport { NoInfoMsgComponent } from 'components/CommonComponents/NoMoviesMsg/NoInfoMsg';\nimport placeholder from 'components/placeholders/no-poster.png';\nimport PropTypes from 'prop-types';\n\nexport default function Cast() {\n  const cast = useCast();\n\n  return (\n    <>\n      {cast === null && <Loading />}\n\n      {cast?.length === 0 && (\n        <NoInfoMsgComponent text={\"We don't have information\"} />\n      )}\n\n      {cast && (\n        <CastList>\n          {cast.map(actor => {\n            return (\n              <CastItem key={actor.cast_id}>\n                <ActorPhoto>\n                  <img\n                    src={\n                      actor.profile_path\n                        ? `https://image.tmdb.org/t/p/w200${actor.profile_path}`\n                        : placeholder\n                    }\n                    alt={actor.name}\n                  />\n                </ActorPhoto>\n\n                <h4>{actor.name}</h4>\n                <p>Character: {actor.character}</p>\n              </CastItem>\n            );\n          })}\n        </CastList>\n      )}\n    </>\n  );\n}\n\nCast.propTypes = {\n  cast: PropTypes.arrayOf(\n    PropTypes.shape({\n      cast_id: PropTypes.number.isRequired,\n      profile_path: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      character: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport * as API from 'components/API/API';\n\nexport function useCast() {\n  const { movieId } = useParams();\n\n  const [cast, setCast] = useState(null);\n\n  useEffect(() => {\n    API.getMovieCast(movieId).then(response => {\n      setCast(prevState => [...response.cast]);\n    });\n  }, [movieId]);\n\n  return cast;\n}\n","import styled from 'styled-components';\n\nexport const Details = styled.div`\n  display: block;\n\n  @media screen and (min-width: 500px) {\n    display: grid;\n    grid-template-columns: 200px auto-fill;\n    grid-template-rows: 300px auto-fill;\n    grid-column-gap: 20px;\n    grid-row-gap: 0;\n  }\n`;\n\nexport const Poster = styled.div`\n  display: flex;\n  justify-content: center;\n  margin: auto;\n  height: 300px;\n  width: 200px;\n  background-color: #c3c3c3a4;\n  margin-bottom: 20px;\n\n  @media screen and (min-width: 500px) {\n    grid-area: 1 / 1 / 2 / 2;\n    margin: 0;\n    margin-bottom: 30px;\n  }\n\n  img {\n    max-height: 300px;\n  }\n`;\n\nexport const Desription = styled.div`\n  @media screen and (min-width: 500px) {\n    grid-area: 1 / 2 / 2 / 3;\n  }\n`;\n\nexport const MoreInfo = styled.div`\n  border-top: 1px solid #8a8a8a;\n  border-bottom: 1px solid #8a8a8a;\n  padding-top: 20px;\n  padding-bottom: 20px;\n\n  @media screen and (min-width: 500px) {\n    grid-area: 2 / 1 / 3 / 3;\n  }\n`;\n\nexport const CastList = styled.ul`\n  list-style: none;\n  padding: 0;\n\n  @media screen and (min-width: 500px) {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(120px, 1fr));\n    grid-gap: 20px;\n  }\n`;\n\nexport const CastItem = styled.li`\n  text-align: center;\n  padding: 10px 0;\n`;\n\nexport const ActorPhoto = styled.div`\n  background-color: #c3c3c3a4;\n  width: 150px;\n  height: 225px;\n  margin: 0 auto 10px auto;\n\n  img {\n    width: 150px;\n    height: 225px;\n  }\n\n  @media screen and (min-width: 500px) {\n    width: 120px;\n    height: 180px;\n\n    img {\n      width: 120px;\n      height: 180px;\n    }\n  }\n`;\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"names":["axios","options","params","api_key","query","getTrending","response","data","getMovieByQuery","getMovieDetails","id","getMovieCast","getMovieReviews","Loader","styled","Loading","NoInfoMsg","NoInfoMsgComponent","text","Cast","cast","movieId","useParams","useState","setCast","useEffect","API","then","prevState","useCast","length","map","actor","src","profile_path","placeholder","alt","name","character","cast_id","Details","Poster","Desription","MoreInfo","CastList","CastItem","ActorPhoto","_toConsumableArray","arr","Array","isArray","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError"],"sourceRoot":""}